openapi: 3.0.0
info:
  title: CineULima API
  description: Documentación de la API de Cine ULima - Progra Movil
  version: 1.0.0
servers:
- url: http://localhost:4567 #https://humble-disco-jx4w6xvvvxr25g59-4567.app.github.dev
tags:
- name: auth
- name: peliculas
- name: salas
- name: usuarios
- name: productos
- name: reserva
paths:
  /user/validate:
    post:
      tags:
      - auth
      summary: Validar usuario
      description: Valida un usuario mediante DNI y contraseña
      operationId: userValidatePOST
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user_validate_body'
        required: true
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: Usuario no encontrado o contraseña incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: Auth
  /user/create:
    post:
      tags:
      - auth
      summary: Crear usuario
      description: Crea un nuevo usuario
      operationId: userCreatePOST
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user_create_body'
        required: true
      responses:
        "200":
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "400":
          description: Usuario ya existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: Auth
  /user/reset:
    post:
      tags:
      - auth
      summary: Restablecer contraseña
      description: Restablece la contraseña de un usuario
      operationId: userResetPOST
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user_reset_body'
        required: true
      responses:
        "200":
          description: Contraseña actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: Auth
  /peliculas:
    get:
      tags:
      - peliculas
      summary: Obtener información de películas
      description: Obtiene información de una película por ID o de todas las películas
      operationId: peliculasGET
      parameters:
      - name: id
        in: query
        description: ID de la película
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Información de las películas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "404":
          description: Película no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
      x-swagger-router-controller: Peliculas
  /salas:
    get:
      tags:
      - salas
      summary: Obtener información de salas
      description: Obtiene información de todas las salas
      operationId: salasGET
      parameters:
      - name: id
        in: query
        description: ID de la sala
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Información de salas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_2'
                x-content-type: application/json
      x-swagger-router-controller: Salas

  /usuarios:
    get:
      tags:
        - usuarios
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios.
      responses:
          '200':
            description: Lista de usuarios
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Usuario'
          '500':
            description: Error interno del servidor
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                    mensaje:
                      type: string
  /usuarios/{id}:
    get:
      tags:
        - usuarios
      summary: Obtener un usuario por ID
      description: Retorna un usuario específico basado en su ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  mensaje:
                    type: string
  /usuarios/{id}/foto_perfil:
    post:
      tags:
        - usuarios
      summary: Subir una foto de perfil para un usuario
      description: Sube una foto de perfil para un usuario específico.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto_perfil:
                  type: string
                  format: binary
                  description: La foto de perfil a subir
      responses:
        '200':
          description: Foto de perfil actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                  usuario:
                    $ref: '#/components/schemas/Usuario'
        '400':
          description: No se ha proporcionado ninguna foto de perfil
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  mensaje:
                    type: string
  /usuarios/historial/{id}:
    get:
      tags: 
        - usuarios
      summary: Obtener el historial de compras de un usuario por ID
      description: Recupera el historial de reservas y compras de un usuario específico, incluyendo detalles de las películas, asientos y productos comprados.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '200':
          description: Historial de compras del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reserva_id:
                      type: integer
                      example: 123
                    pelicula:
                      type: string
                      example: "El Señor de los Anillos"
                    fecha_funcion:
                      type: string
                      format: date-time
                      example: "2023-05-18T20:00:00Z"
                    sala:
                      type: object
                      properties:
                        nombre:
                          type: string
                          example: "Sala 1"
                        direccion:
                          type: string
                          example: "Av. Principal 123"
                    asientos:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          fila:
                            type: string
                            example: "A"
                          columna:
                            type: integer
                            example: 5
                    productos:
                      type: array
                      items:
                        type: object
                        properties:
                          nombre:
                            type: string
                            example: "Palomitas"
                          cantidad:
                            type: integer
                            example: 2
                          precio:
                            type: number
                            format: float
                            example: 5.50
                          total:
                            type: number
                            format: float
                            example: 11.00
                    gasto_total:
                      type: number
                      format: float
                      example: 20.50
  /home:
    get:
      tags:
        - peliculas
      summary: Obtener la lista de películas de la HomePage
      description: Recupera una lista de todas las películas, incluyendo sus géneros.
      responses:
        '200':
          description: Lista de películas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    titulo:
                      type: string
                      example: "Inception"
                    imagen_url:
                      type: string
                      example: "https://example.com/inception.jpg"
                    generos:
                      type: array
                      items:
                        type: string
                      example: ["Acción", "Ciencia Ficción"]


  /reservas:
    post:
      tags:
        - reserva
      summary: Crear una nueva reserva
      description: Crea una nueva reserva para una función específica, incluyendo la selección de asientos y productos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                funcion_id:
                  type: integer
                  example: 10
                asientos:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
                productos:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      cantidad:
                        type: integer
                        example: 2
      responses:
        '200':
          description: Reserva creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reserva creada exitosamente"
        '400':
          description: Asientos no disponibles o solicitud incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Asientos no disponibles"
                  asientos_no_disponibles:
                    type: array
                    items:
                      type: integer
                    example: [4, 5]
        '404':
          description: Función no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Función no encontrada"
  /productos:
    get:
      tags:
        - productos
      summary: Obtener la lista de productos
      description: Recupera una lista de todos los productos disponibles.
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    nombre:
                      type: string
                      example: "Palomitas"
                    descripcion:
                      type: string
                      example: "Palomitas de maíz con mantequilla"
                    precio:
                      type: number
                      format: float
                      example: 5.50
                    stock:
                      type: integer
                      example: 100

components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        apellido:
          type: string
        dni:
          type: string
        correo:
          type: string
        password:
          type: string
    Pelicula:
      type: object
      properties:
        id:
          type: integer
        titulo:
          type: string
        sinopsis:
          type: string
        imagen_url:
          type: string
        trailer_url:
          type: string
        actores:
          type: array
          items:
            type: string
        generos:
          type: array
          items:
            type: string
    Sala:
      type: object
      properties:
        id:
          type: integer
        nombre_sala:
          type: string
        imagen_url:
          type: string
        direccion:
          type: string
    Funcion:
      type: object
      properties:
        id:
          type: integer
        pelicula_id:
          type: integer
        sala_id:
          type: integer
        fecha_hora:
          type: datetime
    user_validate_body:
      required:
      - dni
      - password
      type: object
      properties:
        dni:
          type: string
        password:
          type: string
    inline_response_200:
      type: object
      properties:
        message:
          type: string
        data:
          type: string
      example:
        data: data
        message: message
    inline_response_404:
      type: object
      properties:
        message:
          type: string
      example:
        message: message
    user_create_body:
      required:
      - apellido
      - correo
      - dni
      - nombre
      - password
      type: object
      properties:
        nombre:
          type: string
        apellido:
          type: string
        dni:
          type: string
        correo:
          type: string
        password:
          type: string
    user_reset_body:
      required:
      - correo
      - dni
      type: object
      properties:
        dni:
          type: string
        correo:
          type: string
    inline_response_200_1:
      type: object
      properties:
        id:
          type: integer
        titulo:
          type: string
        sinopsis:
          type: string
        imagen_url:
          type: string
        trailer_url:
          type: string
        actores:
          type: array
          items:
            type: string
        generos:
          type: array
          items:
            type: string
        funciones:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_1_funciones'
      example:
        actores:
        - actores
        - actores
        funciones:
        - id: 6
          time: 2000-01-23T04:56:07.000+00:00
        - id: 6
          time: 2000-01-23T04:56:07.000+00:00
        imagen_url: imagen_url
        generos:
        - generos
        - generos
        titulo: titulo
        id: 0
        sinopsis: sinopsis
        trailer_url: trailer_url
    inline_response_200_2:
      type: object
      properties:
        id:
          type: integer
        nombre_sala:
          type: string
        imagen_url:
          type: string
        direccion:
          type: string
        funciones:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_2_funciones'
      example:
        direccion: direccion
        imagen_url: imagen_url
        id: 0
        nombre: nombre
    inline_response_200_1_funciones:
      type: object
      properties:
        id:
          type: integer
        time:
          type: string
          format: date-time
      example:
        id: 6
        time: 2000-01-23T04:56:07.000+00:00
    inline_response_200_2_funciones:
      type: object
      properties:
        id:
          type: integer
        time:
          type: string
          format: date-time
      example:
        id: 6
        time: 2000-01-23T04:56:07.000+00:00
  